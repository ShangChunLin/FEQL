sa2L3*(sa1L12*sn0 + sa1L13*sn1 + sa1L14*sn2 + sa1L15*seps0*sn3)*(sa1L16*sn0 + sa1L17*sn1 + sa1L18*sn2 + sa1L19*seps0*sn3) + sa2L4*(sa1L20*sn0 + sa1L21*sn1 + sa1L22*sn2 + sa1L23*seps0*sn3)*(sa1L24*sn0 + sa1L25*sn1 + sa1L26*sn2 + sa1L27*seps0*sn3) + sa2L5*(sa1L28*sn0 + sa1L29*sn1 + sa1L30*sn2 + sa1L31*seps0*sn3)/(sa1L32*sn0 + sa1L33*sn1 + sa1L34*sn2 + sa1L35*seps0*sn3 + 1) + (sa2L18*(sa1L0*sn0 + sa1L1*sn1 + sa1L2*sn2 + sa1L3*seps0*sn3) + sa2L19*(exp(sa1L4*sn0 + sa1L5*sn1 + sa1L6*sn2 + sa1L7*seps0*sn3) - 1) + sa2L20*log(sa1L10*sn2 + sa1L11*seps0*sn3 + sa1L8*sn0 + sa1L9*sn1 + 1) + sa2L21*(sa1L12*sn0 + sa1L13*sn1 + sa1L14*sn2 + sa1L15*seps0*sn3)*(sa1L16*sn0 + sa1L17*sn1 + sa1L18*sn2 + sa1L19*seps0*sn3) + sa2L22*(sa1L20*sn0 + sa1L21*sn1 + sa1L22*sn2 + sa1L23*seps0*sn3)*(sa1L24*sn0 + sa1L25*sn1 + sa1L26*sn2 + sa1L27*seps0*sn3) + sa2L23*(sa1L28*sn0 + sa1L29*sn1 + sa1L30*sn2 + sa1L31*seps0*sn3)/(sa1L32*sn0 + sa1L33*sn1 + sa1L34*sn2 + sa1L35*seps0*sn3 + 1))*(sa2L24*(sa1L0*sn0 + sa1L1*sn1 + sa1L2*sn2 + sa1L3*seps0*sn3) + sa2L25*(exp(sa1L4*sn0 + sa1L5*sn1 + sa1L6*sn2 + sa1L7*seps0*sn3) - 1) + sa2L26*log(sa1L10*sn2 + sa1L11*seps0*sn3 + sa1L8*sn0 + sa1L9*sn1 + 1) + sa2L27*(sa1L12*sn0 + sa1L13*sn1 + sa1L14*sn2 + sa1L15*seps0*sn3)*(sa1L16*sn0 + sa1L17*sn1 + sa1L18*sn2 + sa1L19*seps0*sn3) + sa2L28*(sa1L20*sn0 + sa1L21*sn1 + sa1L22*sn2 + sa1L23*seps0*sn3)*(sa1L24*sn0 + sa1L25*sn1 + sa1L26*sn2 + sa1L27*seps0*sn3) + sa2L29*(sa1L28*sn0 + sa1L29*sn1 + sa1L30*sn2 + sa1L31*seps0*sn3)/(sa1L32*sn0 + sa1L33*sn1 + sa1L34*sn2 + sa1L35*seps0*sn3 + 1)) + (sa2L30*(sa1L0*sn0 + sa1L1*sn1 + sa1L2*sn2 + sa1L3*seps0*sn3) + sa2L31*(exp(sa1L4*sn0 + sa1L5*sn1 + sa1L6*sn2 + sa1L7*seps0*sn3) - 1) + sa2L32*log(sa1L10*sn2 + sa1L11*seps0*sn3 + sa1L8*sn0 + sa1L9*sn1 + 1) + sa2L33*(sa1L12*sn0 + sa1L13*sn1 + sa1L14*sn2 + sa1L15*seps0*sn3)*(sa1L16*sn0 + sa1L17*sn1 + sa1L18*sn2 + sa1L19*seps0*sn3) + sa2L34*(sa1L20*sn0 + sa1L21*sn1 + sa1L22*sn2 + sa1L23*seps0*sn3)*(sa1L24*sn0 + sa1L25*sn1 + sa1L26*sn2 + sa1L27*seps0*sn3) + sa2L35*(sa1L28*sn0 + sa1L29*sn1 + sa1L30*sn2 + sa1L31*seps0*sn3)/(sa1L32*sn0 + sa1L33*sn1 + sa1L34*sn2 + sa1L35*seps0*sn3 + 1))*(sa2L36*(sa1L0*sn0 + sa1L1*sn1 + sa1L2*sn2 + sa1L3*seps0*sn3) + sa2L37*(exp(sa1L4*sn0 + sa1L5*sn1 + sa1L6*sn2 + sa1L7*seps0*sn3) - 1) + sa2L38*log(sa1L10*sn2 + sa1L11*seps0*sn3 + sa1L8*sn0 + sa1L9*sn1 + 1) + sa2L39*(sa1L12*sn0 + sa1L13*sn1 + sa1L14*sn2 + sa1L15*seps0*sn3)*(sa1L16*sn0 + sa1L17*sn1 + sa1L18*sn2 + sa1L19*seps0*sn3) + sa2L40*(sa1L20*sn0 + sa1L21*sn1 + sa1L22*sn2 + sa1L23*seps0*sn3)*(sa1L24*sn0 + sa1L25*sn1 + sa1L26*sn2 + sa1L27*seps0*sn3) + sa2L41*(sa1L28*sn0 + sa1L29*sn1 + sa1L30*sn2 + sa1L31*seps0*sn3)/(sa1L32*sn0 + sa1L33*sn1 + sa1L34*sn2 + sa1L35*seps0*sn3 + 1)) + (sa2L42*(sa1L0*sn0 + sa1L1*sn1 + sa1L2*sn2 + sa1L3*seps0*sn3) + sa2L43*(exp(sa1L4*sn0 + sa1L5*sn1 + sa1L6*sn2 + sa1L7*seps0*sn3) - 1) + sa2L44*log(sa1L10*sn2 + sa1L11*seps0*sn3 + sa1L8*sn0 + sa1L9*sn1 + 1) + sa2L45*(sa1L12*sn0 + sa1L13*sn1 + sa1L14*sn2 + sa1L15*seps0*sn3)*(sa1L16*sn0 + sa1L17*sn1 + sa1L18*sn2 + sa1L19*seps0*sn3) + sa2L46*(sa1L20*sn0 + sa1L21*sn1 + sa1L22*sn2 + sa1L23*seps0*sn3)*(sa1L24*sn0 + sa1L25*sn1 + sa1L26*sn2 + sa1L27*seps0*sn3) + sa2L47*(sa1L28*sn0 + sa1L29*sn1 + sa1L30*sn2 + sa1L31*seps0*sn3)/(sa1L32*sn0 + sa1L33*sn1 + sa1L34*sn2 + sa1L35*seps0*sn3 + 1))/(sa2L48*(sa1L0*sn0 + sa1L1*sn1 + sa1L2*sn2 + sa1L3*seps0*sn3) + sa2L49*(exp(sa1L4*sn0 + sa1L5*sn1 + sa1L6*sn2 + sa1L7*seps0*sn3) - 1) + sa2L50*log(sa1L10*sn2 + sa1L11*seps0*sn3 + sa1L8*sn0 + sa1L9*sn1 + 1) + sa2L51*(sa1L12*sn0 + sa1L13*sn1 + sa1L14*sn2 + sa1L15*seps0*sn3)*(sa1L16*sn0 + sa1L17*sn1 + sa1L18*sn2 + sa1L19*seps0*sn3) + sa2L52*(sa1L20*sn0 + sa1L21*sn1 + sa1L22*sn2 + sa1L23*seps0*sn3)*(sa1L24*sn0 + sa1L25*sn1 + sa1L26*sn2 + sa1L27*seps0*sn3) + sa2L53*(sa1L28*sn0 + sa1L29*sn1 + sa1L30*sn2 + sa1L31*seps0*sn3)/(sa1L32*sn0 + sa1L33*sn1 + sa1L34*sn2 + sa1L35*seps0*sn3 + 1) + 1) + exp(sa2L10*(sa1L20*sn0 + sa1L21*sn1 + sa1L22*sn2 + sa1L23*seps0*sn3)*(sa1L24*sn0 + sa1L25*sn1 + sa1L26*sn2 + sa1L27*seps0*sn3) + sa2L11*(sa1L28*sn0 + sa1L29*sn1 + sa1L30*sn2 + sa1L31*seps0*sn3)/(sa1L32*sn0 + sa1L33*sn1 + sa1L34*sn2 + sa1L35*seps0*sn3 + 1) + sa2L9*(sa1L12*sn0 + sa1L13*sn1 + sa1L14*sn2 + sa1L15*seps0*sn3)*(sa1L16*sn0 + sa1L17*sn1 + sa1L18*sn2 + sa1L19*seps0*sn3)) + log(sa2L15*(sa1L12*sn0 + sa1L13*sn1 + sa1L14*sn2 + sa1L15*seps0*sn3)*(sa1L16*sn0 + sa1L17*sn1 + sa1L18*sn2 + sa1L19*seps0*sn3) + sa2L16*(sa1L20*sn0 + sa1L21*sn1 + sa1L22*sn2 + sa1L23*seps0*sn3)*(sa1L24*sn0 + sa1L25*sn1 + sa1L26*sn2 + sa1L27*seps0*sn3) + sa2L17*(sa1L28*sn0 + sa1L29*sn1 + sa1L30*sn2 + sa1L31*seps0*sn3)/(sa1L32*sn0 + sa1L33*sn1 + sa1L34*sn2 + sa1L35*seps0*sn3 + 1) + 1) - 1